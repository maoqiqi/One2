plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion Integer.parseInt(COMPILE_SDK_VERSION)
    buildToolsVersion BUILDTOOLS_VERSION

    defaultConfig {
        applicationId "com.codearms.maoqiqi.one"
        minSdkVersion Integer.parseInt(MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(TARGET_SDK_VERSION)
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    // navigation
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.3"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.3"
    // viewpager2
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    // viewModels
    implementation 'androidx.fragment:fragment-ktx:1.3.0'
    // lifecycle
    // implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    // implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    // network
//    implementation 'com.squareup.okio:okio:2.8.0'
//    implementation 'com.squareup.okhttp3:okhttp:4.8.1'
//    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.0'
//    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
//    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
//    // json
//    implementation 'com.squareup.moshi:moshi-kotlin:1.9.3'
//    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.9.3'
//    // glide
//    implementation 'com.github.bumptech.glide:glide:4.11.0'
//    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    // ARouter
    implementation 'com.alibaba:arouter-api:1.5.1'

    implementation project(':common')
    implementation 'com.codearms.maoqiqi:lib-log:1.0.0'
    implementation 'com.codearms.maoqiqi:lib-databinding:1.0.0'
    implementation project(':language')
    // implementation(name:'common-release', ext:'aar')
    if (IS_MODULE.toBoolean()) {
        implementation project(':home')
        implementation project(':news')
        implementation project(':book')
        implementation project(':music')
        implementation project(':movie')
        implementation project(':navigation')
    }

    // test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

println "-------------------------------------------------------------------------------------------"
// 默认版本名称
def defaultVersionName = android.defaultConfig.versionName
println "defaultVersionName：" + defaultVersionName

android.applicationVariants.all { variant ->
    println "-------------------------------------------------------------------------------------------"
    println "versionName：" + variant.versionName
    println "flavorName：" + variant.flavorName
    println "buildTypeName：" + variant.buildType.name
    println "productName：" + variant.name

    variant.outputs.all { output ->
        // 时间
        def time = new Date().format('yyyyMMddHHmmss', TimeZone.getTimeZone("UTC"))
        // 要被替换的源字符串
        def sourceFile = "-${variant.flavorName}-${variant.buildType.name}"
        // 替换的字符串
        def replaceFile = "_${variant.flavorName}_${variant.buildType.name}_${variant.versionName}_${time}"
        // 替换
        // 3.3 之前
        // def fileName = output.outputFile.name.replace(sourceFile, replaceFile)
        def fileName = outputFileName.replace(sourceFile, replaceFile)
        println "fileName：" + fileName
        // gradle 3.0 之前
        // output.outputFile = new File(output.outputFile.parent, fileName)
        outputFileName = fileName
    }
}